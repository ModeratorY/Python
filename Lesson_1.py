# ВВОД И ВЫВОД ДАННЫХ В PYTHON

#Переменные и типы данных

a = 10 
print("a =", a)
A = 20
print("A =", A)

''' a и А - это разные переменные, регистр ввода имеет значение '''

print("\n==========================================\n")

# Типы данных

'''
    int   - целочисленный тип (1, 192, 242434)
    float - вещественный тип (1.241234, 2134.6742)
    str   - строковый тип (обязательно пишется в кавычках) ('Hello world')
    bool  - булевый тип (имеет всего два значения: True and False)
'''

# Приведение типов

a = 10
b = str(a) # b - это строка
с = int(b) # c - это снова число
d = 10.78
e = int(d) # e равно 10

# Функция print

'''Функция print выводит все переданные в неё аргументы в стандартный поток вывода.'''

print(1)
print("Hello world!")
print(False)
print(1.5, 2.0, 10, True, "username")
print("Hello" + ' ' + "world" + "!\n")

'''
    На это этапе мы можем увидеть две вещи:
    1) каждый print переносит поток вывода на новую строчку
    2) аргументы, переданные в функцию print выводятся через пробел
'''

'''
    В обоих случаях мы можем изменить стандартное поведение. 
    Рассмотрим первый параметр функции print — end.
    В него передается строка, которая напечатается после всех аргументов функции print.
'''
print(1, end = " ") # в этом случае переноса строки не будет, вместо неё будет просто пробел
print(2, end = " ")
print(3, end = "\n\n") 

'''
    Рассмотрим второй параметр функции print — sep, sep от английского separator (разделитель). 
    По умолчанию параметр sep равен ' '. Время для экспериментов ╰(▔∀▔)╯.
'''

print(1, 2, 3, 4)
print(1, 2, 3, 4, sep='+++')
print(1, 2, 3, 4, sep='♥♥♥')
print(1, 2, 3, 4, sep='(◕‿◕)')

print("\n==========================================\n")

# Функция input

name = input("Как Вас зовут? ") 

# Функция input может принимать всего лишь один аргумент - строку
# После предложения в "" - ах программа будет ждать ввод слова в переменную name

print("Привет,", name, "\n") # или ("Привет," + name, "\n")

''' ВАЖНОЕ ЗАМЕЧЕНИЕ: Функция input возвращает строковый тип данных '''

"""
    Строки можно складывать друг с другом - это называется объединением строк
    Пример некорректного кода:
"""

number1 = input("Введи первое число: ")
number2 = input("Введи второе число: ")
print(number1 + number2, end = '\n\n')

# Поэтому необходимо преобразовать строковый тип в целочисленный (str в int)

number1 = int(input("Введи такое же первое число: "))
number2 = int(input("Введи такое же второе число: "))
print(number1 + number2, end = '\n\n')

'''
    Если вы не знаете какой тип у переменной, то можно использовать функцию type()
    Которая вернёт тип переменной
    Пример: 
'''
# допустим мы не знаем какой тип у этих переменных
a = 10 
b = 3.53

print(type(a))
print(type(b))


print("\n==========================================\n")





